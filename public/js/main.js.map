{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/post-dialog/post-dialog.component.css","webpack:///./src/app/post-dialog/post-dialog.component.html","webpack:///./src/app/post-dialog/post-dialog.component.ts","webpack:///./src/app/post.service.ts","webpack:///./src/app/post.ts","webpack:///./src/app/post/post.component.css","webpack:///./src/app/post/post.component.html","webpack:///./src/app/post/post.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".float-button {\\r\\n    position: fixed;\\r\\n    bottom: 40px;\\r\\n    right: 40px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLFlBQVk7Q0FDZiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZsb2F0LWJ1dHRvbiB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBib3R0b206IDQwcHg7XHJcbiAgICByaWdodDogNDBweDtcclxufSJdfQ== */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n    <span>Projeto: Laravel + Angular</span>\\n</mat-toolbar>\\n\\n<mat-divider></mat-divider>\\n\\n<div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-around stretch\\\">\\n    <app-post *ngFor=\\\"let p of posts\\\" [post]=\\\"p\\\"></app-post>\\n</div>\\n<button mat-fab color=\\\"primary\\\" class=\\\"float-button\\\" (click)=\\\"openDialog()\\\">\\n  <mat-icon>add</mat-icon>\\n</button>\"","import { MatDialog } from '@angular/material';\nimport { Component } from '@angular/core';\nimport { Post } from './post';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { PostService } from './post.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  public posts: Post[];\n\n  constructor(public dialog: MatDialog,private postService: PostService){}\n  \n  ngOnInit(){\n    this.posts = this.postService.posts;\n  }\n  //Abrir o componente PostDialogComponent \n  openDialog(){\n    const dialogRef = this.dialog.open(PostDialogComponent, {\n      width: '600px',\n    });\n    dialogRef.afterClosed().subscribe(\n      (result) =>{\n        if (result){\n          this.postService.salvar(result.post, result.arquivo)\n        }\n      }\n    )\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { APP_BASE_HREF } from '@angular/common';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatBadgeModule } from '@angular/material/badge';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { PostComponent } from './post/post.component';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { PostService } from './post.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostComponent,\n    PostDialogComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n\n    FormsModule, \n    ReactiveFormsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n\n    MatButtonModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatBadgeModule,\n  ],\n  providers: [\n    PostService,\n    {provide:APP_BASE_HREF, useValue:'../../../public/js'}\n  ],\n\n  entryComponents : [\n    PostDialogComponent\n  ],\n  \n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bvc3QtZGlhbG9nL3Bvc3QtZGlhbG9nLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around left\\\">\\n    <div fxLaylout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n        <mat-form-field fxFlex=\\\"50\\\">\\n            <input matInput placeholder=\\\"Seu nome\\\" [(ngModel)]=\\\"dados.post.nome\\\">\\n            <mat-hint>Digite aqui seu nome</mat-hint>\\n        </mat-form-field>\\n\\n        <mat-form-field fxFlex=\\\"40\\\">\\n            <input matInput placeholder=\\\"Seu email\\\" [(ngModel)]=\\\"dados.post.email\\\">\\n            <mat-hint>Digite aqui seu email</mat-hint>\\n        </mat-form-field>\\n    </div>\\n\\n    <div fxLaylout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n        <mat-form-field fxFlex=\\\"50\\\">\\n            <input matInput placeholder=\\\"Titulo da mensagem\\\" [(ngModel)]=\\\"dados.post.titulo\\\">\\n            <mat-hint>Digite aqui o titulo</mat-hint>\\n        </mat-form-field>\\n\\n        <mat-form-field fxFlex=\\\"40\\\">\\n            <input matInput placeholder=\\\"Subtitulo de mensagem\\\" [(ngModel)]=\\\"dados.post.subtitulo\\\">\\n            <mat-hint>Digite aqui o subtitulo</mat-hint>\\n        </mat-form-field>\\n    </div>\\n    <mat-form-field>\\n        <textarea matInput placeholder=\\\"Deixei aqui sua mensagem\\\" [(ngModel)]=\\\"dados.post.mensagem\\\"></textarea>\\n    </mat-form-field>\\n</div>\\n\\n<input type=\\\"file\\\" style=\\\"display: none;\\\" (change)=\\\"mudouArquivo($event)\\\" #fileInput>\\n<button mat-stroked-button color=\\\"primary\\\" (click)=\\\"fileInput.click()\\\">\\n  <mat-icon>add_a_photo</mat-icon>\\n  Adicionar uma Foto\\n</button>\\n<p *ngIf=\\\"nomeArquivo!=''\\\">\\n    <strong>Arquivo: </strong>{{nomeArquivo}}\\n    <mat-icon color=\\\"primary\\\">done</mat-icon>\\n</p>\\n<br><br>\\n\\n<div style=\\\"text-align: center;\\\">\\n    <button mat-button color=\\\"primary\\\" (click)=\\\"salvarFormulario()\\\">OK</button>\\n    <button mat-button color=\\\"warn\\\" (click)=\\\"cancelarFormulario()\\\">Cancelar</button>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Post } from '../post';\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.css']\n})\nexport class PostDialogComponent implements OnInit {\n\n  private nomeArquivo: string = '';\n\n  // Conter valores digitados no formulario\n  private dados = {\n    post: new Post(\"\",\"\",\"\",\"\",\"\",\"\"),\n    arquivo: null\n  };\n\n  // Retorna os dados que o usuario digitou no formulario\n  constructor(\n    public dialogref: MatDialogRef<PostDialogComponent>) { }\n\n  ngOnInit() {\n  }\n\n  // função que captura o nome do arquivo e o arquivo e seta no nomeArquivo e dados.arquivo\n  mudouArquivo(event){\n    this.nomeArquivo = event.target.files[0].name;\n    this.dados.arquivo = event.target.files[0];\n  }\n\n  salvarFormulario(){\n    this.dialogref.close(this.dados);\n  }\n\n  cancelarFormulario(){\n    this.dialogref.close(null);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEventType, HttpEvent } from '@angular/common/http';\nimport { Post } from './post';\n\n@Injectable()\nexport class PostService {\n  \n    public posts: Post[] = [];\n\n  //metodo construtor que recebe via construtor que vai retornar todos os posts do servidor\n  constructor(private http: HttpClient) {\n    this.http.get(\"/api/\").subscribe(\n      (posts: any[]) => {\n        for(let p of posts){\n          this.posts.push(\n            new Post(p.nome,p.titulo, p.butitulo, p.email, p.mensagem, p.arquivo, p.id, p.likes)\n          );\n        }\n      }\n    );\n  }\n\n  //metodo que salva o post no servidor\n  salvar(post: Post, file: File){\n    const uploadData = new FormData();\n    uploadData.append('nome', post.nome);\n    uploadData.append('email', post.email);\n    uploadData.append('titulo', post.titulo);\n    uploadData.append('subtitulo', post.subtitulo);\n    uploadData.append('mensagem', post.mensagem);\n    uploadData.append('arquivo', file, file.name);\n\n    this.http.post(\"/api/\", uploadData,{\n      reportProgress: true, observe: 'events'\n    }).subscribe(\n      (event: any) => {\n        if (event.type == HttpEventType.Response){\n          let p: any = event.body;\n          this.posts.push(\n            new Post(p.nome,p.titulo, p.butitulo, p.email, p.mensagem, p.arquivo, p.id, p.likes)\n          );\n        }\n\n        //Mostra a porcentagem do upload do arquivo\n        if (event.type == HttpEventType.UploadProgress){\n          console.log('UploadProgress');\n          console.log(event);\n        }\n    })\n  }\n\n\n\n\n\n\n}\n","// Classe que armazena cada objeto Post\r\n\r\nexport class Post {\r\n    constructor(\r\n        public nome: string,\r\n        public titulo: string,\r\n        public subtitulo: string,\r\n        public email: string,\r\n        public mensagem: string,\r\n        public arquivo?: string,\r\n        public id?: number,\r\n        public likes?: number\r\n    ) {}\r\n}\r\n","module.exports = \".card {\\r\\n    max-width: 300px;\\r\\n    margin: 10px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdC9wb3N0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsYUFBYTtDQUNoQiIsImZpbGUiOiJzcmMvYXBwL3Bvc3QvcG9zdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQge1xyXG4gICAgbWF4LXdpZHRoOiAzMDBweDtcclxuICAgIG1hcmdpbjogMTBweDtcclxufSJdfQ== */\"","module.exports = \"<mat-card fxFlex class=\\\"card\\\">\\n    <mat-card-header>\\n        <div mat-card-avatar></div>\\n        <mat-card-title>{{ post.titulo }}</mat-card-title>\\n        <mat-card-subtitle>{{ post.subtitulo }}</mat-card-subtitle>\\n    </mat-card-header>\\n    <img mat-card-image src=\\\"/storage/{{post.arquivo}}\\\" alt=\\\"Photo\\\">\\n    <mat-card-content>\\n        <p>\\n            {{post.mensagem}}\\n        </p>\\n    </mat-card-content>\\n    <mat-card-actions>\\n        <button mat-button>LIKE</button>\\n        <button mat-button>SHARE</button>\\n    </mat-card-actions>\\n</mat-card>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Post } from '../post';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n  @Input() post: Post;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}